services:
  db:
    build:
      context: .
      dockerfile: Dockerfile-mongodb
    container_name: mongodb
    hostname: "${MONGO_HOST}"
    restart: on-failure
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - "${MONGO_PORT}:27017"

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: build_app
    container_name: fastapi-app
    restart: on-failure
    ports:
      - "${APP_PORT}:8000"
    env_file:
      - .env
    volumes:
      - ./:/app


  redis:
    image: redis:latest
    restart: on-failure
    container_name: redis
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ['taskiq', 'worker', 'src.taskiq.main:broker', '-fsd']
    container_name: worker
    env_file:
      - .env
    volumes:
      - .:/app

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: ['taskiq', 'scheduler', 'src.taskiq.main:scheduler', '--skip-first-run']
    container_name: scheduler
    env_file:
      - .env
    volumes:
      - .:/app

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    env_file:
      - .env
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    volumes:
      - "zookeeper_data:/bitnami"


  kafka-broker:
    image: bitnami/kafka:3.4
    container_name: kafka
    env_file:
      - .env
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "${KAFKA_BROKER_PORT}:9092"
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    env_file:
      - .env
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: ${KAFKA_BROKER_HOST}:${KAFKA_BROKER_PORT}
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_UI_CLUSTER_NAME}
    ports:
      - "${KAFKA_UI_PORT}:8080"
    depends_on:
      - kafka-broker

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local